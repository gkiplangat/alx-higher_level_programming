def test_add_integer():
    """
    Test cases for the add_integer function
    """

    assert add_integer(1, 2) == 3  # Add two positive integers
    assert add_integer(-1, -2) == -3  # Add two negative integers
    assert add_integer(0, 0) == 0  # Add two zeros
    assert add_integer(10, -5) == 5  # Add positive and negative integers
    assert add_integer(3.14, 2.86) == 6  # Add two floats that sum up to an integer
    assert add_integer(3.14, -2.86) == 0  # Add two floats that sum up to zero
    assert add_integer(3.14) == 101  # Use default value for the second argument
    assert add_integer(-3.14) == 95  # Use default value for the second argument with a negative float
    assert add_integer(3) == 101  # Add an integer and use default value for the second argument
    assert add_integer(-3) == 95  # Add a negative integer and use default value for the second argument

    try:
        add_integer(3.14, "2.86")  # Try adding a float and a string
    except TypeError as error:
        assert str(error) == "b must be an integer"

    try:
        add_integer("3.14", 2.86)  # Try adding a string and a float
    except TypeError as error:
        assert str(error) == "a must be an integer"

